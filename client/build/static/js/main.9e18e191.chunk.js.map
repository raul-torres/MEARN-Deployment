{"version":3,"sources":["components/PetForm.js","components/PetList.js","components/PetDetails.js","components/PetUpdate.js","views/main.js","App.js","serviceWorker.js","index.js"],"names":["props","useState","name","setName","type","setType","description","setDescription","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","errors","setErrors","className","fontSize","to","style","border","onSubmit","e","preventDefault","axios","post","then","res","data","console","log","navigate","catch","err","placeholder","value","onChange","target","borderRadius","color","display","message","marginLeft","marginBottom","animals","setAnimals","useEffect","get","map","pet","key","_id","setPet","id","fontWeight","onClick","petId","delete","put","setLoaded","PetForm","path","onSubmitProp","initialName","initialType","initialDescription","initialSkill1","initialSkill2","initialSkill3","PetList","PetDetails","PetUpdate","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9e18e191.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, navigate } from '@reach/router';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Heading,\r\n  } from 'rebass';\r\nimport {\r\n    Label,\r\n    Input,\r\n} from '@rebass/forms';\r\n\r\nexport default props => {\r\n\r\n        const [name, setName] = useState(\"\"),\r\n                      [type, setType] = useState(\"\"),\r\n        [description, setDescription] = useState(\"\"),\r\n                  [skill1, setSkill1] = useState(\"\"),\r\n                  [skill2, setSkill2] = useState(\"\"),\r\n                  [skill3, setSkill3] = useState(\"\");\r\n\r\n        const [errors, setErrors] = useState({});\r\n        const submitHandler = e => {\r\n            e.preventDefault();\r\n            axios.post('http://localhost:8000/api/pet', {\r\n                name,\r\n                type,\r\n                description,\r\n                skill1,\r\n                skill2,\r\n                skill3,\r\n            })\r\n            .then(res=> {\r\n                if(res.data.errors) {\r\n                    setErrors(res.data.errors);\r\n                }\r\n                else {\r\n                console.log(res);\r\n                navigate('/pets')\r\n                }\r\n            })\r\n            .catch(err=>console.log(err))\r\n        }\r\n\r\n\r\n    return (\r\n        <div className = 'container'>\r\n        <div className = 'jumbotron'>\r\n        <Heading fontSize ={[5]}>Know of a pet needing a home?</Heading>\r\n        <br />\r\n        <Link to = '/pets'\r\n            className = 'btn btn-outline-primary'\r\n            style = {{\r\n                border : '0',\r\n            }}\r\n        >Cancel</Link>\r\n        <hr />\r\n    \r\n        <form onSubmit = { submitHandler }>\r\n            <p>\r\n                <Label>Pet Name:</Label>\r\n                <Input     type = 'text'\r\n                    placeholder = 'name'\r\n                          value = {name}\r\n                       onChange = { (e) => setName(e.target.value) }\r\n                          style = {{\r\n                              borderRadius : '10px'\r\n                          }}\r\n                       />\r\n                <span style = {{\r\n                    color : 'red',\r\n                    display : 'block',\r\n                }}>{errors.name ? errors.name.message: ''}</span>\r\n            </p>\r\n            <p>\r\n                <Label>Pet Type:</Label>\r\n                <Input     type = 'text'\r\n                    placeholder = 'type'\r\n                          value = {type}\r\n                       onChange = { (e) => setType(e.target.value) }\r\n                          style = {{\r\n                            borderRadius : '10px'\r\n                        }}\r\n                       />\r\n                <span style = {{\r\n                    color : 'red',\r\n                    display : 'block',\r\n                }}>{errors.type ? errors.type.message: ''}</span>\r\n            </p>\r\n            <p>\r\n                <Label>Description:</Label>\r\n                <Input     type = 'text'\r\n                    placeholder = 'description'\r\n                          value = {description}\r\n                       onChange = { (e) => setDescription(e.target.value) }\r\n                          style = {{\r\n                            borderRadius : '10px'\r\n                        }}\r\n                       />\r\n                <span style = {{\r\n                        color : 'red',\r\n                        display : 'block',\r\n                    }}>{errors.description ? errors.description.message: ''}</span>\r\n            </p>\r\n            <p>\r\n                <Label>Skills:</Label>\r\n            </p>\r\n            <Label style = {{\r\n                marginLeft : '2%'\r\n            }}>Skill 1:</Label>\r\n            <Input         type = 'text'\r\n                    placeholder = 'skill 1'\r\n                          value = {skill1}\r\n                       onChange = { (e) => setSkill1(e.target.value) }\r\n                          style = {{\r\n                            borderRadius : '10px',\r\n                            marginBottom : '1%',\r\n                            marginLeft : '2%'\r\n                        }}/>\r\n            <Label style = {{\r\n                marginLeft : '2%'\r\n            }}>Skill 2:</Label>\r\n            <Input         type = 'text'\r\n                    placeholder = 'skill 2'\r\n                          value = {skill2}\r\n                       onChange = { (e) => setSkill2(e.target.value) }\r\n                          style = {{\r\n                            borderRadius : '10px',\r\n                            marginBottom : '1%',\r\n                            marginLeft : '2%'\r\n                        }}/>\r\n            <Label style = {{\r\n                marginLeft : '2%'\r\n            }}>Skill 3:</Label>\r\n            <Input         type = 'text'\r\n                    placeholder = 'skill 3'\r\n                          value = {skill3}\r\n                       onChange = { (e) => setSkill3(e.target.value) }\r\n                          style = {{\r\n                            borderRadius : '10px',\r\n                            marginLeft : '2%'\r\n                        }}/>\r\n            <br />\r\n            <p>\r\n                <input type = 'submit'\r\n                  className = 'btn btn-outline-primary'\r\n                      value = 'Add Pet'\r\n                      style = {{\r\n                          borderRadius : '8px',\r\n                      }} />\r\n            </p>\r\n        </form>\r\n    </div>\r\n    </div>\r\n    )}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Box,\r\n    Card,\r\n    Image,\r\n    Heading,\r\n    Text,\r\n    Button\r\n  } from 'rebass';\r\n\r\nexport default props => {\r\n    const [animals, setAnimals] = useState([]);\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/pet')\r\n            .then(res => setAnimals(res.data));\r\n    }, [])\r\n    return(\r\n        <div className = 'contianer'>\r\n            <div className = 'jumbotron'>\r\n                <Heading fontSize={[5]}>These pets are looking for a home!</Heading>\r\n                <p></p>\r\n                <Link to = '/pets/new'>Add a pet to the Shelter</Link>\r\n                <p></p>\r\n                <br />\r\n                    <table className='table table-striped'>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Type</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                    {\r\n                    animals.map( pet => \r\n                    <tr key={pet._id}>\r\n                        <td>{pet.name}</td>\r\n                        <td>{pet.type}</td>\r\n                        <td>\r\n                        <Link to = {\"/pets/\" + pet._id} \r\n                        >Details  </Link>\r\n                        <span style={{fontSize : '25px'}}>||</span>\r\n                        <Link to = {\"/pets/\" + pet._id + '/edit'} \r\n                        >  Edit</Link>\r\n                        </td>\r\n                    </tr>\r\n                    )\r\n                }   \r\n                </table>     \r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Link, navigate } from '@reach/router';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Box,\r\n    Card,\r\n    Image,\r\n    Heading,\r\n    Text,\r\n    Button\r\n  } from 'rebass';\r\n\r\nexport default props => {\r\n    const [pet, setPet] = useState ({})\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/pet/\" + props.id)\r\n            .then(res => setPet({\r\n                ...res.data\r\n            }))\r\n    }, [])\r\n    const deletePet = (petId) => {\r\n        axios.delete('http://localhost:8000/api/pet/' + petId)\r\n            .then(res => {\r\n                console.log(res);\r\n                navigate(\"/pets\")\r\n            })\r\n    }\r\n    return(\r\n        <div className='container'>\r\n            <div className='jumbotron'>\r\n                    <Heading fontSize = {[5]}\r\n                    >Details about {pet.name} </Heading>\r\n                    <Link      to ='/pets'\r\n                        className = 'btn btn-outline-primary'\r\n                            style = {{\r\n                                border : 'none',\r\n                                fontSize : '18px'\r\n                            }}\r\n                    >Back to Home</Link>\r\n                    <hr />\r\n                    <br />\r\n                    <Text fontSize = {[4]} fontWeight='bold'>Pet Type:</Text>\r\n                    <Text fontSize = {[4]}>{pet.type}</Text>\r\n                    <br />\r\n                    <Text fontSize = {[4]} fontWeight='bold'>Description:</Text>\r\n                    <Text fontSize = {[4]}>{pet.description}</Text>\r\n                    <br />\r\n                    <Text fontSize = {[4]} fontWeight='bold'>Skills:</Text>\r\n                    <Text fontSize = {[4]} fontWeight='bold'>Skill 1:</Text>\r\n                    <Text fontSize = {[4]}>{pet.skill1}</Text>\r\n                    <Text fontSize = {[4]} fontWeight='bold'>Skill 2:</Text>\r\n                    <Text fontSize = {[4]}>{pet.skill2}</Text>\r\n                    <Text fontSize = {[4]} fontWeight='bold'>Skill 3:</Text>\r\n                    <Text fontSize = {[4]}>{pet.skill3}</Text>   \r\n                    <br />\r\n                    <button onClick = { (e) => {deletePet(pet._id)}}\r\n                          className = 'btn btn-outline-danger'>\r\n                    Adopt this pet!\r\n                    </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, navigate } from '@reach/router';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Box,\r\n    Card,\r\n    Image,\r\n    Heading,\r\n    Text,\r\n    Button\r\n  } from 'rebass';\r\nimport {\r\n    Label,\r\n    Input,\r\n    Select,\r\n    Textarea,\r\n    Radio,\r\n    Checkbox,\r\n} from '@rebass/forms';\r\n\r\nexport default props => {\r\n\r\n                         const { id } = props,\r\n                      [name, setName] = useState(),\r\n                      [type, setType] = useState(),\r\n        [description, setDescription] = useState(),\r\n                  [skill1, setSkill1] = useState(),\r\n                  [skill2, setSkill2] = useState(),\r\n                  [skill3, setSkill3] = useState();\r\n\r\n        useEffect(() => {\r\n        axios.get('http://localhost:8000/api/pet/' + id)\r\n        .then(res => {\r\n            setName(res.data.name);\r\n            setType(res.data.type);\r\n            setDescription(res.data.description);\r\n            setSkill1(res.data.skill1);\r\n            setSkill2(res.data.skill2);\r\n            setSkill3(res.data.skill3);\r\n        })\r\n        }, [])\r\n\r\n        const [errors, setErrors] = useState({});\r\n        const updatePet = e => {\r\n        e.preventDefault();\r\n        axios.put('http://localhost:8000/api/pet/' + id, {\r\n        name,\r\n        type,\r\n        description,\r\n        skill1,\r\n        skill2,\r\n        skill3\r\n        })\r\n        .then(res => {\r\n            if(res.data.errors) {\r\n                setErrors(res.data.errors);\r\n            }\r\n            else {\r\n            console.log(res);\r\n            navigate('/pets')\r\n            }\r\n            })\r\n        }\r\n\r\n\r\n    return (\r\n        <div className = 'container'>\r\n        <div className = 'jumbotron'>\r\n        <Heading fontSize ={[5]}>Edit this Pet</Heading>\r\n        <br />\r\n        <Link to = '/pets'\r\n            className = 'btn btn-outline-primary'\r\n            style = {{\r\n                border : '0',\r\n            }}\r\n        >Cancel</Link>\r\n        <hr />\r\n        <form onSubmit = { updatePet }>\r\n            <p>\r\n                <Label>Pet Name:</Label>\r\n                <Input     type = 'text'\r\n                    placeholder = 'name'\r\n                          value = {name}\r\n                       onChange = { (e) => setName(e.target.value) }\r\n                          style = {{\r\n                              borderRadius : '10px'\r\n                          }}\r\n                       />\r\n                <span style = {{\r\n                    color : 'red',\r\n                    display : 'block',\r\n                }}>{errors.name ? errors.name.message: ''}</span>\r\n            </p>\r\n            <p>\r\n                <Label>Pet Type:</Label>\r\n                <Input     type = 'text'\r\n                    placeholder = 'type'\r\n                          value = {type}\r\n                       onChange = { (e) => setType(e.target.value) }\r\n                          style = {{\r\n                            borderRadius : '10px'\r\n                        }}\r\n                       />\r\n                <span style = {{\r\n                    color : 'red',\r\n                    display : 'block',\r\n                }}>{errors.type ? errors.type.message: ''}</span>\r\n            </p>\r\n            <p>\r\n                <Label>Description:</Label>\r\n                <Input     type = 'text'\r\n                    placeholder = 'description'\r\n                          value = {description}\r\n                       onChange = { (e) => setDescription(e.target.value) }\r\n                          style = {{\r\n                            borderRadius : '10px'\r\n                        }}\r\n                       />\r\n                <span style = {{\r\n                        color : 'red',\r\n                        display : 'block',\r\n                    }}>{errors.description ? errors.description.message: ''}</span>\r\n            </p>\r\n            <p>\r\n                <Label>Skills:</Label>\r\n            </p>\r\n            <Label style = {{\r\n                marginLeft : '2%'\r\n            }}>Skill 1:</Label>\r\n            <Input         type = 'text'\r\n                    placeholder = 'skill 1'\r\n                          value = {skill1}\r\n                       onChange = { (e) => setSkill1(e.target.value) }\r\n                          style = {{\r\n                            borderRadius : '10px',\r\n                            marginBottom : '1%',\r\n                            marginLeft : '2%'\r\n                        }}/>\r\n            <Label style = {{\r\n                marginLeft : '2%'\r\n            }}>Skill 2:</Label>\r\n            <Input         type = 'text'\r\n                    placeholder = 'skill 2'\r\n                          value = {skill2}\r\n                       onChange = { (e) => setSkill2(e.target.value) }\r\n                          style = {{\r\n                            borderRadius : '10px',\r\n                            marginBottom : '1%',\r\n                            marginLeft : '2%'\r\n                        }}/>\r\n            <Label style = {{\r\n                marginLeft : '2%'\r\n            }}>Skill 3:</Label>\r\n            <Input         type = 'text'\r\n                    placeholder = 'skill 3'\r\n                          value = {skill3}\r\n                       onChange = { (e) => setSkill3(e.target.value) }\r\n                          style = {{\r\n                            borderRadius : '10px',\r\n                            marginLeft : '2%'\r\n                        }}/>\r\n            <br />\r\n            <p>\r\n                <input type = 'submit'\r\n                  className = 'btn btn-outline-primary'\r\n                      value = 'Edit Pet'\r\n                      style = {{\r\n                          borderRadius : '8px',\r\n                      }} />\r\n            </p>\r\n        </form>\r\n        \r\n\r\n    </div>\r\n    </div>\r\n    )}","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Router, Link } from '@reach/router';\r\n\r\nimport PetForm from '../components/PetForm';\r\nimport PetList from '../components/PetList';\r\nimport PetDetails from '../components/PetDetails';\r\nimport PetUpdate from '../components/PetUpdate';\r\n\r\nexport default () => {\r\n    const [animals, setAnimals] = useState([]),\r\n            [loaded, setLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/pet')\r\n            .then(res =>{ \r\n                setAnimals(res.data)\r\n                setLoaded(true);\r\n            });\r\n    }, [])\r\n\r\n    const createPet = pet => {\r\n        axios.post('http://localhost:8000/api/pet', pet)\r\n            .then(res=>{\r\n                setAnimals([...animals, res.data]);\r\n            })\r\n            .catch(err=>console.log(err))\r\n    }\r\n    return (\r\n        <div>\r\n            <Router>\r\n            <PetForm path = '/pets/new' onSubmitProp={createPet} \r\n            initialName=\"\" \r\n            initialType=\"\"\r\n            initialDescription=\"\"\r\n            initialSkill1=\"\"\r\n            initialSkill2=\"\"\r\n            initialSkill3=\"\"/>\r\n           <PetList path = 'pets' animals={animals}/>\r\n            <PetDetails path = '/pets/:id' />\r\n            <PetUpdate path = '/pets/:id/edit'/>\r\n            </Router>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport './components/PetForm';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Box,\n    Card,\n    Image,\n    Heading,\n    Text,\n    Button\n  } from 'rebass';\n\nimport PetForm from './components/PetForm';\n\nimport Main from './views/main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Heading fontSize = {[7]}>Pet Shelter</Heading>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}